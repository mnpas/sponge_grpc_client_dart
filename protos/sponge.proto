/*
 * Copyright 2016-2019 The Sponge authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

syntax = "proto3";

import "google/protobuf/any.proto";
import "google/protobuf/timestamp.proto";

option java_multiple_files = true;
option java_package = "org.openksavi.sponge.grpcapi.proto";
option java_outer_classname = "SpongeGrpcApiProto";
option objc_class_prefix = "SPG";

package org.openksavi.sponge.grpcapi;

// The Sponge gRPC API service definition.
service SpongeGrpcApi {
  rpc GetVersion (VersionRequest) returns (VersionResponse) {}

  rpc Subscribe (stream SubscribeRequest) returns (stream SubscribeResponse) {}
}

message ObjectValue {
  oneof value_oneof {
    // An empty json_value indicates a null.
    string value_json = 1;
    google.protobuf.Any value_any = 2;
  }
}

message Event {
  string id = 1;
  string name = 2;
  google.protobuf.Timestamp time = 3;
  int32 priority = 4;
  string label = 5;
  string description = 6;
  // Event attributes as a JSON string containing event aributes map corresponding a registered event record type.
  ObjectValue attributes = 7;
}

message RequestHeader {
   string id = 1;
   string username = 2;
   string password = 3;
   string auth_token = 4;
}

message ResponseHeader {
   string id = 1;
   string error_code = 2;
   string error_message = 3;
   string detailed_error_message = 4;
}

message VersionRequest {
  RequestHeader header = 1;
}

message VersionResponse {
  ResponseHeader header = 1;
  string version = 2;
}

message SubscribeRequest {
  RequestHeader header = 1;
  repeated string event_names = 2;
}

message SubscribeResponse {
  ResponseHeader header = 1;
  int64 subscription_id = 2;
  Event event = 3;
}
